version: '3'
services:
  django:
    build: app
    expose:
      - ${DJANGO_PORT}
    env_file:
      - ./.env  
    volumes:
      - static:/app/static
    networks:
      - test-network
    entrypoint: [ "/bin/sh", "-c"]
    command: >
      "python manage.py migrate --noinput &&
      python manage.py createsuperuser --noinput --username $DJANGO_SUPERUSER_USERNAME --email $DJANGO_SUPERUSER_EMAIL &&
      gunicorn config.asgi:application -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:${DJANGO_PORT}"
    depends_on:
      psql-server:
        condition: service_healthy
  
  psql-server:
    image: postgres:13
    ports:
      - "${DB_PORT}:${DB_PORT}"
    expose:
      - ${DB_PORT}
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${DB_NAME}", "-U", "${DB_USER}"]
      interval: 5s
      retries: 5
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - postgresql:/var/lib/postgresql/data
    restart: always
    networks:
      - test-network

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs:/etc/nginx/conf.d:ro
      - static:/data/static
    depends_on:
      - django
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
    networks:
      - test-network

  
networks:
  test-network:
    name: test-network

volumes:
  postgresql:
  static:
    